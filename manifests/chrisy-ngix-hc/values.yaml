## Default values for the NGINX Helm chart.
## This file can be used to customize the deployment.
##
## Ref: https://artifacthub.io/packages/helm/bitnami/nginx/19.0.2

# -- Enable metrics via Prometheus.
metrics:
  enabled: false

# -- Service type to expose NGINX
service:
  type: ClusterIP

# -- Number of NGINX replicas to deploy.
replicaCount: 1

# -- Name of the NGINX deployment.
name: "nginx"

# -- The image to use for the NGINX deployment.
image:
  registry: docker.io
  repository: bitnami/nginx
  tag: 1.23.3 # Default from the linked chart
  pullPolicy: IfNotPresent

# -- Pod labels
podLabels: {}

# -- Node labels for pod assignment
nodeSelector: {}

# -- Tolerations for node affinit
tolerations: []

# -- Affinity settings
affinity: {}

# -- Priority class for NGINX pods
priorityClassName: ""

# -- Security context for NGINX pods
podSecurityContext: {}

# -- Security context for NGINX containers
containerSecurityContext:
  allowPrivilegeEscalation: false
  capabilities:
    drop:
      - ALL
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 1001

# -- Resource requests and limits for NGINX pods
resources:
  requests:
    cpu: 100m
    memory: 128Mi
  limits:
    cpu: 1000m
    memory: 256Mi

# -- Liveness and readiness probes
livenessProbe:
  httpGet:
    path: /
    port: 8080
  initialDelaySeconds: 30
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 3
  successThreshold: 1
readinessProbe:
  httpGet:
    path: /
    port: 8080
  initialDelaySeconds: 5
  periodSeconds: 5
  timeoutSeconds: 3
  failureThreshold: 3
  successThreshold: 1

# -- Additional volumes
extraVolumes: []
#  - name: my-volume
#    configMap:
#      name: my-configmap

# -- Volume mounts
extraVolumeMounts: []
#  - name: my-volume
#    mountPath: /path/to/mount

# -- List of extra environment variables to set in the NGINX container
extraEnv: []
# - name: MY_VAR
#   value: "my-value"

# -- Configuration for the NGINX service.
service:
  type: ClusterIP
  port: 80
  targetPort: 8080
  nodePort: null # Only used if type is NodePort
  # -- Annotations to add to the service
  annotations: {}
  #   service.beta.kubernetes.io/aws-load-balancer-type: nlb
  # -- Custom labels for the service
  labels: {}

# -- Configuration for the NGINX ingress.
ingress:
  enabled: false
  className: ""
  # -- Annotations to add to the ingress
  annotations: {}
  #   kubernetes.io/ingress.class: nginx
  #   kubernetes.io/tls-acme: "true"
  # -- Path to use for the ingress
  path: /
  pathType: Prefix #  Supported path types: Exact, Prefix, ImplementationSpecific
  # -- Hostnames for the ingress
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: Prefix
  # -- TLS configuration for the ingress
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

# -- Enable sticky sessions.  Uses the nginx.ingress.kubernetes.io/affinity annotation.
sessionAffinity: false

# -- Configuration for the NGINX DaemonSet.
daemonset:
  enabled: false
  # -- Update strategy for the DaemonSet
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
  # -- Pod Management Policy
  podManagementPolicy: OrderedReady

# -- Horizontal Pod Autoscaler configuration.
hpa:
  enabled: false
  minReplicas: 1
  maxReplicas: 10
  cpu:
    targetAverageUtilization: 80
  memory:
    targetAverageUtilization: 80

# -- Additional init containers.
initContainers: []
# - name: my-init-container
#   image: busybox:1.28
#   command: ['sh', '-c', 'echo "Hello, world!"']

# -- Custom NGINX configuration.
#    This can be used to add custom server blocks, etc.
# --  It is recommended to use ConfigMaps for custom configuration
# --  and mount them as volumes.  This is a simplified way to add
# --  small config snippets.
config: |
  # Add any custom NGINX configuration here
  # server {
  #   listen 8080;
  #   root /usr/share/nginx/html;
  #   index index.html;
  # }

# -- Configures SSL
tls:
  enabled: false
  # --  If true, the chart will create a secret with a self-signed certificate.
  autoGenerated: false
  # -- Name of the secret containing the certificate and key.
  # -- Required if tls.enabled is true and tls.autoGenerated is false.
  secretName: ""
  # -- Filename of the certificate in the secret.
  certFilename: "tls.crt"
  # -- Filename of the certificate key in the secret.
  certKeyFilename: "tls.key"
  # -- Filename of the CA certificate in the secret.
  certCAFilename: "ca.crt"
